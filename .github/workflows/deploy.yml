name: Deploy to production

on:
  push:
    branches: [ "main" ]

jobs:
  
  deploy:
    name: Build image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install Kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: '1.18.8'
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Load secrets and save to app.env
        run:  aws secretsmanager get-secret-value --secret-id g-bank --query SecretString --output text | jq -r 'to_entries |map("\(.key)=\(.value)")|.[]' >> app.env
    

      - name: Build, tag, and push docker image to Amazon ECR Public
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: g-bank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG:latest .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
      
      - name: Update Kube config
        run: aws eks update-kubeconfig --name g-bank --region eu-west-3

      - name: Deploy image to Amazon EKS
        run: |
          kubectl apply -f aws/aws_auth.yaml
          kubectl apply -f aws/deployment.yaml
          kubectl apply -f aws/service.yaml
          kubectl apply -f aws/issuer.yaml
          kubectl apply -f aws/ingress.yaml

